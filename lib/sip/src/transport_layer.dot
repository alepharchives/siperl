digraph transport_layer {
	graph [ rankdir = TB ];
	
	node [ shape = box, style = rounded ];	
	
	sip_transport;
	sip_transport_sup [ style = "filled, rounded", fillcolor = yellow ];
	
	subgraph cluster_tcp {
		style = "setlinewidth(1)";
		label = "TCP transport";
		labeljust = l;
		
		sip_transport_tcp_sup [ style = "filled, rounded", fillcolor = yellow ];
		sip_transport_tcp;
		sip_transport_tcp_listener;
		sip_transport_tcp_conn;
		sip_transport_tcp_conn_sup [ style = "filled, rounded", fillcolor = yellow ];
		sip_transport_tcp_conn_registry;
		
	};
	
	subgraph cluster_udp {
		style = "setlinewidth(1)";
		label = "UDP transport"
		labeljust = l;
		
		sip_transport_udp_sup [ style = "filled, rounded", fillcolor = yellow ];
		sip_transport_udp;
		sip_transport_udp_socket;
		
	}
	
	// Edges
	
	// Supervision tree
	sip_transport_sup -> sip_transport_udp_sup;
	sip_transport_sup -> sip_transport_tcp_sup;
	
	sip_transport_tcp_sup -> sip_transport_tcp_conn_sup;
	sip_transport_tcp_sup -> sip_transport_tcp_conn_registry;
	sip_transport_tcp_sup -> sip_transport_tcp_listener;
	sip_transport_tcp_sup -> sip_transport_tcp;
	
	
	sip_transport_tcp_conn_sup -> sip_transport_tcp_conn;
	
	sip_transport_udp_sup -> sip_transport_udp_socket;
	sip_transport_udp_sup -> sip_transport_udp;
	
	// Spawn tree 
	sip_transport_tcp          -> sip_transport_tcp_conn_sup 
		[style = "dashed", constraint = false, label = "spawn connection"];
		
	sip_transport_tcp_listener -> sip_transport_tcp_conn_sup 
		[style = "dashed", constraint = false, label = "spawn connection"];
		
	sip_transport_tcp_conn -> sip_transport_tcp_conn_registry 
		[style = "dashed", constraint = false, label = "register itself"];
}